.TextEditor-controls {
    overflow-x: initial;

    .ProseMirrorMenu {
        display: inline-block;
    }

    .NodeTypeDropdownMenu {
        min-width: unset;
        padding: 5px 3px;

        .NodeTypeButton {
            display: block;
            padding: 0;
            margin: 0;
        }
    }

    .ButtonGroup>.Button--menuDropdown {
        padding: 0;

        >span {
            padding: 8px 0;
            height: 100%;
            width: 100%;
            display: block;
        }
    }

    .FormDropdown {
        min-width: 220px;
        padding: 8px 5px;

        .Form-group {
            margin-bottom: 10px;
        }

        .Button {
            margin-right: 5px;
            padding: 5px 8px;
            width: auto;
        }
    }

    .NodeTypeButton {
        font-size: 16px;
        font-weight: bold;
        margin: 0px -1px 1px -1px;
    }
}

@media @phone {
    .TextEditor-controls {
        overflow-x: scroll;

        .NodeTypeDropdownMenu {
            display: flex;
            flex-direction: column;
            align-items: center;

            .NodeTypeButton {
                padding: 4px 0;
                margin: 0;
                width: 100%;
            }
        }

        .HiddenItemsDropdownMenu {
            font-size: 15px;
        }
    }
}

.TextEditor .ProseMirror {
    overflow-x: hidden;
    overflow-y: auto;
    word-wrap: break-word;
    white-space: break-spaces;


    .placeholder::before {
        color: @control-color;
        position: absolute;
        cursor: text;
        content: attr(data-before);
    }

    li p {
        margin: 0;
    }

    details {
        font-size: inherit;
        border: 0;
        background: lighten(@control-bg, 3%);
        color: @control-color;
        border-radius: @border-radius;
        padding: 3px 15px;
        margin: 1em 0;

        p {
            margin-bottom: 0;
            padding-bottom: 1em;
        }

        p:last-child {
            padding-bottom: 3px;
        }
    }

    spoiler {
        background: repeating-linear-gradient(45deg,
            #606dbc,
            #606dbc 5px,
            #465298 5px,
            #465298 10px);
        color: @text-color;

        * {
            color: @text-color;
        }
    }

    math {
        font-family: source-code-pro, Monaco, Consolas, "Courier New", monospace;
        padding: 5px;
        background: @code-bg;
        color: @code-color;
        line-height: 1.3;
        font-size: 90%;
        border-radius: 4px;

        &::before,&::after  {
            content: '$';
        }
    }

    pre.math {
        &::before {
            content: '$$ (LaTeX)';
            display: block;
        }

        &::after {
            content: '$$';
            display: block;
        }
    }
}

.ProseMirror-hideselection *::selection {
    background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
    background: transparent;
}

.ProseMirror-hideselection {
    caret-color: transparent;
}

.ProseMirror-selectednode {
    outline: 2px solid #8cf;
}

/* Make sure li selections wrap around markers */

li.ProseMirror-selectednode {
    outline: none;
}

li.ProseMirror-selectednode:after {
    content: "";
    position: absolute;
    left: -32px;
    right: -2px;
    top: -2px;
    bottom: -2px;
    border: 2px solid #8cf;
    pointer-events: none;
}

.ProseMirror-gapcursor {
    display: none;
    pointer-events: none;
    position: absolute;
}

.ProseMirror-gapcursor:after {
    content: "|";
    display: block;
    position: absolute;
    top: -10px;
    width: 20px;
    animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
    to {
        visibility: hidden;
    }
}

.ProseMirror-focused .ProseMirror-gapcursor {
    display: block;
}